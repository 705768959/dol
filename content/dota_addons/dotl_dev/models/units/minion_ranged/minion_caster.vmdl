<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "minion_caster"
				string m_meshFile = "models/units/minion_ranged/minion_caster.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = NULL
			string m_sFileName = "models\\units\\minion_ranged\\minion_caster.attach"
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "Root"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Root"
					float(3) m_vMinBounds = ( -12.343544, -20.363201, -31.125099 )
					float(3) m_vMaxBounds = ( 12.343544, 14.481503, 28.139500 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Spine1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Spine1"
					float(3) m_vMinBounds = ( -18.265100, -10.305504, -19.830681 )
					float(3) m_vMaxBounds = ( 18.265100, 19.343903, 17.501839 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Clavicle"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Clavicle"
					float(3) m_vMinBounds = ( 1.774721, -4.137959, -14.639293 )
					float(3) m_vMaxBounds = ( 19.050039, 12.942245, 14.328208 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Clavicle"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Clavicle"
					float(3) m_vMinBounds = ( -19.050039, -12.942230, -14.328188 )
					float(3) m_vMaxBounds = ( -0.810499, 4.137970, 15.253714 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Head"
					float(3) m_vMinBounds = ( -15.659799, -4.787006, -21.704475 )
					float(3) m_vMaxBounds = ( 15.659801, 28.523201, 29.655228 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Shoulder"
					float(3) m_vMinBounds = ( -18.168673, -14.181042, -10.617935 )
					float(3) m_vMaxBounds = ( -2.315791, 6.544361, 13.344692 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Shoulder"
					float(3) m_vMinBounds = ( -5.289644, -16.788361, -13.344736 )
					float(3) m_vMaxBounds = ( 18.168697, 14.181015, 15.214607 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bottom"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bottom"
					float(3) m_vMinBounds = ( -44.335205, -22.810389, -27.246578 )
					float(3) m_vMaxBounds = ( 41.767097, 10.815092, 31.403423 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Hood1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Hood1"
					float(3) m_vMinBounds = ( -25.652132, -8.372849, -12.724598 )
					float(3) m_vMaxBounds = ( 3.996059, 13.152725, 13.183899 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Elbow"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Elbow"
					float(3) m_vMinBounds = ( -19.199986, -16.716854, -11.792439 )
					float(3) m_vMaxBounds = ( 3.251333, 10.230873, 12.071213 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Elbow"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Elbow"
					float(3) m_vMinBounds = ( -3.251280, -10.230888, -12.071242 )
					float(3) m_vMaxBounds = ( 19.200035, 16.716835, 11.792403 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Waist1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Waist1"
					float(3) m_vMinBounds = ( -3.764608, -4.261166, -6.598628 )
					float(3) m_vMaxBounds = ( -3.030279, -0.775948, 3.276613 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Waist2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Waist2"
					float(3) m_vMinBounds = ( -5.409054, -2.525911, -6.260671 )
					float(3) m_vMaxBounds = ( -3.214882, -0.585861, 9.888381 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Skirt1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Skirt1"
					float(3) m_vMinBounds = ( -34.653610, -1.738293, -17.852896 )
					float(3) m_vMaxBounds = ( 14.268974, 4.325560, 19.282400 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Skirt1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Skirt1"
					float(3) m_vMinBounds = ( -21.804733, -1.581261, -13.957299 )
					float(3) m_vMaxBounds = ( 0.350786, 2.081413, 14.684495 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Waist1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Waist1"
					float(3) m_vMinBounds = ( 0.119028, 0.783535, -3.263917 )
					float(3) m_vMaxBounds = ( 3.777636, 9.755836, 12.764657 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Waist2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Waist2"
					float(3) m_vMinBounds = ( 2.440498, 0.662577, -10.554720 )
					float(3) m_vMaxBounds = ( 25.925465, 2.852926, 14.069540 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Hood2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Hood2"
					float(3) m_vMinBounds = ( -13.355141, -8.372841, -12.724598 )
					float(3) m_vMaxBounds = ( 16.995359, 13.152733, 13.183899 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand"
					float(3) m_vMinBounds = ( -19.580379, -8.588676, -6.804163 )
					float(3) m_vMaxBounds = ( 1.872833, 6.360672, 11.047274 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Scroll"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Scroll"
					float(3) m_vMinBounds = ( -14.756401, -20.613499, -4.447614 )
					float(3) m_vMaxBounds = ( 15.210800, 24.447403, 4.850856 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Collar"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Collar"
					float(3) m_vMinBounds = ( -17.005001, -17.572090, -6.936343 )
					float(3) m_vMaxBounds = ( 17.004997, 14.260712, 6.883119 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Collar"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Collar"
					float(3) m_vMinBounds = ( -15.254801, -14.108154, -5.696480 )
					float(3) m_vMaxBounds = ( 15.390600, 13.018650, 7.453522 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand"
					float(3) m_vMinBounds = ( -1.872885, -6.360703, -11.047305 )
					float(3) m_vMaxBounds = ( 19.580320, 8.588654, 6.804130 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Staff"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Staff"
					float(3) m_vMinBounds = ( -13.771400, -14.965708, -73.639992 )
					float(3) m_vMaxBounds = ( 14.339001, 13.213394, 37.290504 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Skirt1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Skirt1"
					float(3) m_vMinBounds = ( -16.060743, -23.145069, -38.341534 )
					float(3) m_vMaxBounds = ( 14.429523, 5.732891, 22.008968 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Skirt2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Skirt2"
					float(3) m_vMinBounds = ( -30.044758, -14.993855, -14.095726 )
					float(3) m_vMaxBounds = ( 12.553318, 10.290855, 33.547974 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Skirt2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Skirt2"
					float(3) m_vMinBounds = ( -33.944321, -1.738291, -23.714798 )
					float(3) m_vMaxBounds = ( 18.714851, 10.416706, 25.927498 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Skirt2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Skirt2"
					float(3) m_vMinBounds = ( -15.554371, -1.581261, -20.231895 )
					float(3) m_vMaxBounds = ( 17.782982, 7.989281, 18.458397 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Skirt1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Skirt1"
					float(3) m_vMinBounds = ( -14.422888, -5.862690, -21.940704 )
					float(3) m_vMaxBounds = ( 17.024790, 21.982897, 38.596630 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Skirt2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Skirt2"
					float(3) m_vMinBounds = ( -12.369942, -13.956480, -35.795441 )
					float(3) m_vMaxBounds = ( 33.425972, 15.757524, 18.129211 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "minion_caster_attack1"
			string m_Filepath = "models/units/minion_ranged/minion_caster_attack1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 49
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "minion_caster_attack2"
			string m_Filepath = "models/units/minion_ranged/minion_caster_attack2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 49
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "minion_caster_death"
			string m_Filepath = "models/units/minion_ranged/minion_caster_death.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 91
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "minion_caster_death2"
			string m_Filepath = "models/units/minion_ranged/minion_caster_death2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 86
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "minion_caster_death3"
			string m_Filepath = "models/units/minion_ranged/minion_caster_death3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 85
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "minion_caster_idle"
			string m_Filepath = "models/units/minion_ranged/minion_caster_idle.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 47
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "minion_caster_run"
			string m_Filepath = "models/units/minion_ranged/minion_caster_run.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 47
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "defaultmaterial.vmat"
			string m_sReplaceMaterial = "materials/units/ranged_minion_blue.vmat"
		}
	]
}