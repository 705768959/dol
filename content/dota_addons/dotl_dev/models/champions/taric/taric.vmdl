<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "taric"
				string m_meshFile = "models/champions/taric/taric.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = &CVattachmentList_0
			string m_sFileName = ""
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "root"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "root"
					float(3) m_vMinBounds = ( -9.920235, -11.188377, -16.240423 )
					float(3) m_vMaxBounds = ( -1.440353, 13.245941, 15.657846 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "spine"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "spine"
					float(3) m_vMinBounds = ( -36.268730, -22.133705, -24.778858 )
					float(3) m_vMaxBounds = ( 10.420380, 21.921677, 24.492924 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "neck"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "neck"
					float(3) m_vMinBounds = ( -18.145920, -29.097969, -15.225100 )
					float(3) m_vMaxBounds = ( 11.441513, 7.515060, 15.260111 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_shoulder"
					float(3) m_vMinBounds = ( -19.220856, -4.322247, -21.692726 )
					float(3) m_vMaxBounds = ( 32.892670, 44.956722, 26.671467 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_shoulder"
					float(3) m_vMinBounds = ( -19.208778, -0.735214, -26.244831 )
					float(3) m_vMaxBounds = ( 32.906830, 45.071693, 22.119358 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "head"
					float(3) m_vMinBounds = ( -35.951431, -26.250717, -17.327213 )
					float(3) m_vMaxBounds = ( 9.404930, 23.335823, 18.191509 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_uparm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_uparm"
					float(3) m_vMinBounds = ( -9.689362, 2.115807, -6.273661 )
					float(3) m_vMaxBounds = ( 8.055016, 27.387154, 9.306540 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_uparm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_uparm"
					float(3) m_vMinBounds = ( -9.715027, 2.172531, -7.387691 )
					float(3) m_vMaxBounds = ( 8.200005, 27.442619, 6.719778 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "pelvis"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "pelvis"
					float(3) m_vMinBounds = ( -38.524105, -19.979759, -32.739567 )
					float(3) m_vMaxBounds = ( 16.650406, 27.617073, 32.286945 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hair"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hair"
					float(3) m_vMinBounds = ( -12.428253, -5.079854, -14.865181 )
					float(3) m_vMaxBounds = ( 10.245071, 20.798164, 6.218525 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_forearm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_forearm"
					float(3) m_vMinBounds = ( -8.920990, -19.357216, -12.183971 )
					float(3) m_vMaxBounds = ( 12.089378, 28.959015, 10.359503 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_forearm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_forearm"
					float(3) m_vMinBounds = ( -8.225151, -8.566299, -10.075125 )
					float(3) m_vMaxBounds = ( 12.220055, 29.132446, 12.470327 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_thigh"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_thigh"
					float(3) m_vMinBounds = ( -12.199959, -4.376030, -11.787893 )
					float(3) m_vMaxBounds = ( 18.131195, 41.351173, 18.675873 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_thigh"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_thigh"
					float(3) m_vMinBounds = ( -12.203167, -4.378227, -18.444777 )
					float(3) m_vMaxBounds = ( 18.126240, 41.659222, 12.236414 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hair_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hair_b"
					float(3) m_vMinBounds = ( -7.845795, -14.746239, -11.527199 )
					float(3) m_vMaxBounds = ( 16.162857, 24.284370, 15.187954 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_hand"
					float(3) m_vMinBounds = ( -14.622219, -12.138321, -15.551380 )
					float(3) m_vMaxBounds = ( 4.063869, 9.738243, 8.313126 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_cape"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_cape"
					float(3) m_vMinBounds = ( -5.632141, 0.609436, -19.624603 )
					float(3) m_vMaxBounds = ( 2.727348, 27.927139, 14.453606 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_hand"
					float(3) m_vMinBounds = ( -3.881592, -9.961960, -7.968091 )
					float(3) m_vMaxBounds = ( 14.783276, 11.914642, 15.896398 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_cape"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_cape"
					float(3) m_vMinBounds = ( -5.543045, 0.657997, -13.474515 )
					float(3) m_vMaxBounds = ( 3.000557, 54.753788, 20.865803 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_calf"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_calf"
					float(3) m_vMinBounds = ( -51.880516, -21.747570, -12.186974 )
					float(3) m_vMaxBounds = ( 22.320686, 22.180103, 25.715107 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_calf"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_calf"
					float(3) m_vMinBounds = ( -22.334070, -22.132416, -25.489994 )
					float(3) m_vMaxBounds = ( 51.867058, 21.795242, 12.769497 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hair_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hair_c"
					float(3) m_vMinBounds = ( -9.846680, -6.155308, -11.940577 )
					float(3) m_vMaxBounds = ( 7.660110, 25.248928, 7.634546 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_finger"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_finger"
					float(3) m_vMinBounds = ( -5.712219, -12.888252, -9.894136 )
					float(3) m_vMaxBounds = ( 3.573387, 6.912636, 9.275076 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_thumb"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_thumb"
					float(3) m_vMinBounds = ( -6.456165, -13.102669, -4.792328 )
					float(3) m_vMaxBounds = ( 3.704014, 11.993797, 4.203339 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_cape_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_cape_b"
					float(3) m_vMinBounds = ( -6.276299, -20.019781, -56.159027 )
					float(3) m_vMaxBounds = ( 6.873291, 78.631630, 20.816444 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_finger"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_finger"
					float(3) m_vMinBounds = ( -5.400009, -12.754021, -8.993462 )
					float(3) m_vMaxBounds = ( 3.886040, 7.046875, 10.175549 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_thumb"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_thumb"
					float(3) m_vMinBounds = ( -6.256077, -12.908703, -4.545898 )
					float(3) m_vMaxBounds = ( 3.904053, 12.187794, 4.449917 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_cape_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_cape_b"
					float(3) m_vMinBounds = ( -5.784286, -19.969622, -19.835712 )
					float(3) m_vMaxBounds = ( 5.089027, 50.916946, 45.396862 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_foot"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_foot"
					float(3) m_vMinBounds = ( -31.222065, -8.930447, -16.514919 )
					float(3) m_vMaxBounds = ( 14.151349, 24.457684, 19.952305 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_foot"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_foot"
					float(3) m_vMinBounds = ( -31.135624, -8.845141, -19.756683 )
					float(3) m_vMaxBounds = ( 14.237529, 24.543240, 16.710575 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_cloth"
					float(3) m_vMinBounds = ( -16.679863, 0.239037, -25.446606 )
					float(3) m_vMaxBounds = ( 6.875187, 67.469841, 25.444702 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hair_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hair_d"
					float(3) m_vMinBounds = ( -11.456848, -1.399307, -2.204153 )
					float(3) m_vMaxBounds = ( 1.786224, 0.355370, 3.573851 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "_R_finger_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "_R_finger_b"
					float(3) m_vMinBounds = ( -8.262733, -6.991776, -11.020710 )
					float(3) m_vMaxBounds = ( 2.241234, 9.220135, 9.157993 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_thumb_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_thumb_b"
					float(3) m_vMinBounds = ( -5.721247, -19.563488, -20.414381 )
					float(3) m_vMaxBounds = ( 17.831612, 5.799232, 2.342422 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "shield"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "shield"
					float(3) m_vMinBounds = ( -71.236191, -38.879066, -9.333357 )
					float(3) m_vMaxBounds = ( 51.229706, 39.224709, 17.961672 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_cape_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_cape_c"
					float(3) m_vMinBounds = ( -39.914223, -9.297989, -58.665962 )
					float(3) m_vMaxBounds = ( 18.881817, 16.378281, 44.165337 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "_L_finger_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "_L_finger_b"
					float(3) m_vMinBounds = ( -2.184757, -9.602768, -8.945110 )
					float(3) m_vMaxBounds = ( 8.319191, 6.609108, 11.233601 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_thumb_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_thumb_b"
					float(3) m_vMinBounds = ( -17.686111, -5.901703, -2.708008 )
					float(3) m_vMaxBounds = ( 5.946850, 19.461006, 20.048826 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "weapon"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "weapon"
					float(3) m_vMinBounds = ( -72.146210, -50.035034, -26.246540 )
					float(3) m_vMaxBounds = ( 100.251892, 67.932915, 25.913475 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_cape_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_cape_c"
					float(3) m_vMinBounds = ( -18.892643, -16.371582, -43.181023 )
					float(3) m_vMaxBounds = ( 39.931606, 9.305283, 59.648537 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_toe"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_toe"
					float(3) m_vMinBounds = ( -34.610184, -0.048908, -21.307911 )
					float(3) m_vMaxBounds = ( 32.479355, 19.931623, 18.544773 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_toe"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_toe"
					float(3) m_vMinBounds = ( -32.347031, -19.931721, -18.357227 )
					float(3) m_vMaxBounds = ( 34.742317, 0.049145, 21.496704 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_cloth"
					float(3) m_vMinBounds = ( -50.807243, -15.730326, -18.249226 )
					float(3) m_vMaxBounds = ( 13.337790, 4.922920, 18.249271 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_cloth_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_cloth_b"
					float(3) m_vMinBounds = ( -36.409969, -17.074493, -25.446598 )
					float(3) m_vMaxBounds = ( 19.495785, 6.196918, 25.444710 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVattachmentList CVattachmentList_0
{
	string m_name = ""
	CVattachment[] m_attachments = 
	[
		CVattachment
		{
			string m_name = "attach_root"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "root"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_hitloc"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "root"
					float(3) m_vTranslationOffset = ( -27.184570, 0.000003, 0.000002 )
					float(3) m_vRotationOffset = ( -0.000003, 0.000003, -0.000006 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_attack1"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "weapon"
					float(3) m_vTranslationOffset = ( 57.869270, 31.713554, 0.000000 )
					float(3) m_vRotationOffset = ( -0.000017, -0.000025, 0.000031 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_attack2"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "shield"
					float(3) m_vTranslationOffset = ( 0.000000, -0.000004, 13.281429 )
					float(3) m_vRotationOffset = ( -0.000017, 0.000003, 0.000014 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "taric_attack1"
			string m_Filepath = "models/champions/taric/taric_attack1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 31
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_attack2"
			string m_Filepath = "models/champions/taric/taric_attack2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 23
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_idle1"
			string m_Filepath = "models/champions/taric/taric_idle1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 47
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_idle2"
			string m_Filepath = "models/champions/taric/taric_idle2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 47
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_IMPATIENT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_idle3"
			string m_Filepath = "models/champions/taric/taric_idle3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 47
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_run"
			string m_Filepath = "models/champions/taric/taric_run.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 23
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = false
					bool m_bExtractTY = false
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_spell1"
			string m_Filepath = "models/champions/taric/taric_spell1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 23
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_spell2"
			string m_Filepath = "models/champions/taric/taric_spell2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 23
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_spell3"
			string m_Filepath = "models/champions/taric/taric_spell3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 23
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_3"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_spell4"
			string m_Filepath = "models/champions/taric/taric_spell4.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 23
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_5"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_death"
			string m_Filepath = "models/champions/taric/taric_death.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_idle1_loadout"
			string m_Filepath = "models/champions/taric/taric_idle1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 47
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_LOADOUT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_laugh"
			string m_Filepath = "models/champions/taric/taric_laugh.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 47
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_dance"
			string m_Filepath = "models/champions/taric/taric_dance.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 37
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "taric_taunt"
			string m_Filepath = "models/champions/taric/taric_taunt.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 38
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "defaultmaterial.vmat"
			string m_sReplaceMaterial = "materials/champions/taric.vmat"
		}
	]
}