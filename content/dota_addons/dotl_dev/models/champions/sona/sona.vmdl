<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "sona"
				string m_meshFile = "models/champions/sona/sona.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = &CVattachmentList_0
			string m_sFileName = ""
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "C_Root"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "C_Root"
					float(3) m_vMinBounds = ( -12.595400, -9.167595, -11.609659 )
					float(3) m_vMaxBounds = ( 12.593500, 20.879906, 8.888300 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "C_Spline"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "C_Spline"
					float(3) m_vMinBounds = ( -10.491899, -5.849731, -5.648820 )
					float(3) m_vMaxBounds = ( 10.490101, 11.908066, 9.022600 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "C_Chest"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "C_Chest"
					float(3) m_vMinBounds = ( -16.700197, -9.422050, -12.312840 )
					float(3) m_vMaxBounds = ( 16.698702, 31.259056, 9.745701 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "C_Neck"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "C_Neck"
					float(3) m_vMinBounds = ( -4.311939, -1.914452, -3.432207 )
					float(3) m_vMaxBounds = ( 4.264530, 8.381546, 5.986909 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Shoulder"
					float(3) m_vMinBounds = ( -21.365894, -10.958855, -6.580536 )
					float(3) m_vMaxBounds = ( -7.172483, 8.697472, 11.396107 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Shoulder"
					float(3) m_vMinBounds = ( 7.173656, -8.708542, -11.395725 )
					float(3) m_vMaxBounds = ( 21.363567, 10.958405, 6.581295 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "C_Head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "C_Head"
					float(3) m_vMinBounds = ( -7.293580, -5.016251, -6.275730 )
					float(3) m_vMaxBounds = ( 6.012130, 13.706757, 8.898199 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_UpArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_UpArm"
					float(3) m_vMinBounds = ( -7.883377, -5.437000, -3.448662 )
					float(3) m_vMaxBounds = ( 5.178162, 11.265244, 17.234886 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth"
					float(3) m_vMinBounds = ( -53.148582, -2.903681, -13.841799 )
					float(3) m_vMaxBounds = ( 1.322411, 11.785105, 13.843500 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_UpArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_UpArm"
					float(3) m_vMinBounds = ( -5.180450, -11.265116, -17.234501 )
					float(3) m_vMaxBounds = ( 7.882141, 5.984811, 8.047752 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "C_Hip"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "C_Hip"
					float(3) m_vMinBounds = ( -14.043102, -29.696648, -12.322536 )
					float(3) m_vMaxBounds = ( 14.038998, 10.738152, 10.281139 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "C_Hair"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "C_Hair"
					float(3) m_vMinBounds = ( -24.275900, -9.728249, -18.161800 )
					float(3) m_vMaxBounds = ( 24.275999, 9.878754, 4.163721 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_ForeArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_ForeArm"
					float(3) m_vMinBounds = ( -19.222776, -16.675247, -7.850925 )
					float(3) m_vMaxBounds = ( 3.893822, 4.169098, 6.198071 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_R"
					float(3) m_vMinBounds = ( -8.145393, -11.823751, -7.882279 )
					float(3) m_vMaxBounds = ( 52.143906, 0.271297, 5.683617 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_L"
					float(3) m_vMinBounds = ( -52.144165, -0.270475, -5.681898 )
					float(3) m_vMaxBounds = ( 8.144669, 11.824673, 7.883484 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_ForeArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_ForeArm"
					float(3) m_vMinBounds = ( -3.895126, -4.168030, -6.198070 )
					float(3) m_vMaxBounds = ( 19.222826, 16.675285, 7.850928 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_R"
					float(3) m_vMinBounds = ( -6.373253, -10.939438, -6.826048 )
					float(3) m_vMaxBounds = ( 43.171822, 3.304733, 3.862381 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_L"
					float(3) m_vMinBounds = ( -43.122494, -3.335566, -3.824803 )
					float(3) m_vMaxBounds = ( 6.370728, 10.941076, 6.825620 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Skirt"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Skirt"
					float(3) m_vMinBounds = ( -27.937370, -8.167162, -13.754801 )
					float(3) m_vMaxBounds = ( 9.800278, 3.994859, 13.766100 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Skirt"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Skirt"
					float(3) m_vMinBounds = ( -20.811878, -2.878092, -11.436899 )
					float(3) m_vMaxBounds = ( 12.621025, 3.662791, 11.438898 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hair_un"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hair_un"
					float(3) m_vMinBounds = ( -10.116405, -7.880013, -9.722881 )
					float(3) m_vMaxBounds = ( 29.974583, 5.981941, 9.890297 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hair_down"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hair_down"
					float(3) m_vMinBounds = ( -30.035896, -6.505646, -9.865286 )
					float(3) m_vMaxBounds = ( 10.117196, 7.893707, 9.686480 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_hand"
					float(3) m_vMinBounds = ( -11.904621, -2.900673, -3.495604 )
					float(3) m_vMaxBounds = ( 3.502178, 1.861099, 4.918663 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_R_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_R_b"
					float(3) m_vMinBounds = ( -22.972160, -13.495895, -14.817372 )
					float(3) m_vMaxBounds = ( 58.678261, 0.958450, 6.412206 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_L_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_L_b"
					float(3) m_vMinBounds = ( -58.678982, -0.957306, -6.410618 )
					float(3) m_vMaxBounds = ( 22.970348, 13.496246, 14.798700 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_hand"
					float(3) m_vMinBounds = ( -3.502144, -1.910225, -4.918672 )
					float(3) m_vMaxBounds = ( 11.957769, 2.900673, 3.697827 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_R_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_R_b"
					float(3) m_vMinBounds = ( -9.837894, -11.209906, -10.354197 )
					float(3) m_vMaxBounds = ( 44.085571, 6.197596, 2.872044 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_L_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_L_b"
					float(3) m_vMinBounds = ( -44.086193, -6.195941, -2.872677 )
					float(3) m_vMaxBounds = ( 9.835621, 11.203007, 10.387001 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Skirt_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Skirt_b"
					float(3) m_vMinBounds = ( -48.516537, -60.514084, -45.165497 )
					float(3) m_vMaxBounds = ( 12.304848, 7.310455, 45.170288 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Skirt_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Skirt_b"
					float(3) m_vMinBounds = ( -67.391769, -24.484161, -25.562099 )
					float(3) m_vMaxBounds = ( 14.449074, 23.356636, 25.564594 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hair_un_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hair_un_b"
					float(3) m_vMinBounds = ( -18.406998, -12.106247, -11.578632 )
					float(3) m_vMaxBounds = ( 40.534004, 11.514748, 12.512024 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hair_down_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hair_down_b"
					float(3) m_vMinBounds = ( -40.533371, -11.528809, -12.517845 )
					float(3) m_vMaxBounds = ( 18.402977, 12.117767, 11.538145 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Thumb_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Thumb_Index"
					float(3) m_vMinBounds = ( -4.824974, -3.887070, -3.378532 )
					float(3) m_vMaxBounds = ( 8.126541, 1.144135, 4.413498 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index"
					float(3) m_vMinBounds = ( -8.707584, -1.353340, -3.521671 )
					float(3) m_vMaxBounds = ( 1.120680, 1.539528, 3.254194 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_R_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_R_c"
					float(3) m_vMinBounds = ( -15.526949, -25.370537, -13.245525 )
					float(3) m_vMaxBounds = ( 55.703476, 2.005615, 19.481663 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_L_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_L_c"
					float(3) m_vMinBounds = ( -55.704006, -2.005287, -19.480133 )
					float(3) m_vMaxBounds = ( 15.526020, 25.371071, 13.247196 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index"
					float(3) m_vMinBounds = ( -1.328190, -1.583687, -3.147336 )
					float(3) m_vMaxBounds = ( 8.758739, 1.425377, 3.447444 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Thumb_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Thumb_Index"
					float(3) m_vMinBounds = ( -8.126514, -1.144165, -4.413433 )
					float(3) m_vMaxBounds = ( 4.825008, 3.887035, 3.491268 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_R_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_R_c"
					float(3) m_vMinBounds = ( -22.068066, -13.484932, -17.308685 )
					float(3) m_vMaxBounds = ( 41.285793, 3.777723, 14.904029 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_L_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_L_c"
					float(3) m_vMinBounds = ( -41.286469, -3.777393, -14.905704 )
					float(3) m_vMaxBounds = ( 22.130486, 13.485855, 17.307007 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Skirt_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Skirt_c"
					float(3) m_vMinBounds = ( -30.661087, -39.050209, -45.165493 )
					float(3) m_vMaxBounds = ( 18.161835, 12.101058, 45.170292 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Skirt_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Skirt_c"
					float(3) m_vMinBounds = ( -52.386482, -21.181644, -43.840294 )
					float(3) m_vMaxBounds = ( 21.665594, 5.967079, 43.843697 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "head"
					float(3) m_vMinBounds = ( -2.000000, -2.000000, -2.000000 )
					float(3) m_vMaxBounds = ( 2.000000, 2.000000, 2.000000 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hair_un_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hair_un_c"
					float(3) m_vMinBounds = ( -20.878193, -12.043480, -11.301916 )
					float(3) m_vMaxBounds = ( 19.596497, 11.708214, 12.394728 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hair_down_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hair_down_c"
					float(3) m_vMinBounds = ( -19.596504, -11.722519, -12.400410 )
					float(3) m_vMaxBounds = ( 20.883904, 12.054123, 11.301968 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Thumb_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Thumb_Index_b"
					float(3) m_vMinBounds = ( -3.429089, -0.706657, -0.724182 )
					float(3) m_vMaxBounds = ( 1.453743, 0.722000, 0.966457 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_b"
					float(3) m_vMinBounds = ( -4.430632, -1.133446, -3.521670 )
					float(3) m_vMaxBounds = ( 2.721027, 1.095085, 3.257230 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Sleeves"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Sleeves"
					float(3) m_vMinBounds = ( -17.739536, -13.416294, -2.099693 )
					float(3) m_vMaxBounds = ( 8.283401, 3.009335, 11.443018 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_R_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_R_d"
					float(3) m_vMinBounds = ( -20.314297, -22.066109, -14.399354 )
					float(3) m_vMaxBounds = ( 22.852539, 1.793247, 18.266800 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Cloth_L_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Cloth_L_d"
					float(3) m_vMinBounds = ( -22.853104, -1.793097, -18.265240 )
					float(3) m_vMaxBounds = ( 20.322521, 22.066521, 14.400983 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_b"
					float(3) m_vMinBounds = ( -2.934675, -1.359138, -3.193058 )
					float(3) m_vMaxBounds = ( 4.481812, 1.188751, 3.447452 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Thumb_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Thumb_Index_b"
					float(3) m_vMinBounds = ( -1.453648, -0.721977, -0.966381 )
					float(3) m_vMaxBounds = ( 3.429176, 0.706688, 0.724262 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Sleeves"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Sleeves"
					float(3) m_vMinBounds = ( -8.221504, -3.009262, -11.525614 )
					float(3) m_vMaxBounds = ( 17.824894, 13.416325, 1.933256 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_R_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_R_d"
					float(3) m_vMinBounds = ( -19.024048, -12.949509, -7.079617 )
					float(3) m_vMaxBounds = ( 5.454231, -0.445155, 15.973343 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_R_e"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_R_e"
					float(3) m_vMinBounds = ( -30.604912, -17.068254, -13.723838 )
					float(3) m_vMaxBounds = ( 0.221268, -4.501486, 2.418340 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_L_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_L_d"
					float(3) m_vMinBounds = ( -5.453892, 0.445131, -15.975098 )
					float(3) m_vMaxBounds = ( 19.024364, 12.960693, 7.077912 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Cloth_L_e"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Cloth_L_e"
					float(3) m_vMinBounds = ( -0.222420, 4.501251, -2.407388 )
					float(3) m_vMaxBounds = ( 30.603611, 17.055767, 13.722513 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_Skirt_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_Skirt_d"
					float(3) m_vMinBounds = ( -10.595612, -25.451517, -44.445396 )
					float(3) m_vMaxBounds = ( 27.201229, 6.194092, 44.640984 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_Skirt_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_Skirt_d"
					float(3) m_vMinBounds = ( -30.182131, -35.076046, -45.170292 )
					float(3) m_vMaxBounds = ( 40.222855, 5.531525, 45.165501 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "spine"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "spine"
					float(3) m_vMinBounds = ( -8.662120, -5.828232, -5.945340 )
					float(3) m_vMaxBounds = ( -0.000959, 7.607269, 8.638700 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "WEAPON"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "WEAPON"
					float(3) m_vMinBounds = ( -63.525600, -33.581604, -57.972000 )
					float(3) m_vMaxBounds = ( 63.525600, 25.489494, 20.754402 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVattachmentList CVattachmentList_0
{
	string m_name = ""
	CVattachment[] m_attachments = 
	[
		CVattachment
		{
			string m_name = "attach_root"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "C_Root"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_hitloc"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "root"
					float(3) m_vTranslationOffset = ( 0.000000, 8.392799, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, -0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_attack1"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "WEAPON"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_attack2"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "WEAPON"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "sona_attack1"
			string m_Filepath = "models/champions/sona/sona_attack1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_attack2"
			string m_Filepath = "models/champions/sona/sona_attack2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_attack3"
			string m_Filepath = "models/champions/sona/sona_attack3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_run"
			string m_Filepath = "models/champions/sona/sona_run.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 74
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = false
					bool m_bExtractTY = false
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_idle1"
			string m_Filepath = "models/champions/sona/sona_idle1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 198
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_idle2"
			string m_Filepath = "models/champions/sona/sona_idle2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 228
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_IMPATIENT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_idle3"
			string m_Filepath = "models/champions/sona/sona_idle3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 198
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_RARE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_spell1"
			string m_Filepath = "models/champions/sona/sona_spell1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_spell2"
			string m_Filepath = "models/champions/sona/sona_spell2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 43
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_spell3"
			string m_Filepath = "models/champions/sona/sona_spell3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_3"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_spell4"
			string m_Filepath = "models/champions/sona/sona_spell4.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 59
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_5"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_dance"
			string m_Filepath = "models/champions/sona/sona_dance.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 186
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_taunt"
			string m_Filepath = "models/champions/sona/sona_taunt.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 80
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_TAUNT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_laugh"
			string m_Filepath = "models/champions/sona/sona_laugh.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 108
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_joke"
			string m_Filepath = "models/champions/sona/sona_joke.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 68
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sona_death"
			string m_Filepath = "models/champions/sona/sona_death.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 188
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "defaultmaterial.vmat"
			string m_sReplaceMaterial = "materials/champions/sona.vmat"
		}
	]
}