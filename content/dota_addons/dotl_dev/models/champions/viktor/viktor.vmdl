<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "viktor"
				string m_meshFile = "models/champions/viktor/viktor.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = &CVattachmentList_0
			string m_sFileName = ""
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "spine"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "spine"
					float(3) m_vMinBounds = ( -21.673899, -18.834595, -22.859198 )
					float(3) m_vMaxBounds = ( 21.603502, 27.823410, 18.494398 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "chest"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "chest"
					float(3) m_vMinBounds = ( -36.457397, -26.218155, -22.191975 )
					float(3) m_vMaxBounds = ( 28.235901, 49.695740, 23.064732 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Shoulder"
					float(3) m_vMinBounds = ( -2.953609, -30.328018, -23.626347 )
					float(3) m_vMaxBounds = ( 53.584732, 34.824844, 20.880909 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Arm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Arm"
					float(3) m_vMinBounds = ( -11.439667, -19.428923, -9.548717 )
					float(3) m_vMaxBounds = ( 15.564392, 5.662378, 8.803677 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Arm_a"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Arm_a"
					float(3) m_vMinBounds = ( -2.687424, -7.530403, -4.586876 )
					float(3) m_vMaxBounds = ( 19.912216, 2.054061, 4.537758 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Arm_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Arm_b"
					float(3) m_vMinBounds = ( 1.321274, -8.057873, -5.619335 )
					float(3) m_vMaxBounds = ( 30.079346, 3.150153, 5.588619 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Shoulder"
					float(3) m_vMinBounds = ( -44.136429, -19.229095, -21.766529 )
					float(3) m_vMaxBounds = ( 0.238110, 19.012695, 19.278004 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_UpArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_UpArm"
					float(3) m_vMinBounds = ( -15.494064, -14.008255, -12.921862 )
					float(3) m_vMaxBounds = ( 24.946114, 7.876671, 8.879343 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Arm_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Arm_c"
					float(3) m_vMinBounds = ( 1.308884, -9.054761, -6.679020 )
					float(3) m_vMaxBounds = ( 31.241043, 4.289601, 6.665497 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_UpArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_UpArm"
					float(3) m_vMinBounds = ( -30.113426, -12.545715, -17.738411 )
					float(3) m_vMaxBounds = ( 13.751770, 20.523392, 21.254982 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hip"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hip"
					float(3) m_vMinBounds = ( -29.252300, -50.189911, -25.648045 )
					float(3) m_vMaxBounds = ( 27.070400, 22.464096, 17.251354 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_cape"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_cape"
					float(3) m_vMinBounds = ( -53.508469, -13.977169, -9.348724 )
					float(3) m_vMaxBounds = ( -27.837570, 7.867773, 1.405281 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Cape"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Cape"
					float(3) m_vMinBounds = ( -53.317650, -11.010569, -10.876411 )
					float(3) m_vMaxBounds = ( -4.147308, 13.954674, 1.405296 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_ForeArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_ForeArm"
					float(3) m_vMinBounds = ( -11.891495, -12.413582, -15.508392 )
					float(3) m_vMaxBounds = ( 29.283951, 10.900726, 8.931252 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Arm_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Arm_d"
					float(3) m_vMinBounds = ( 2.814453, -8.979144, -6.633621 )
					float(3) m_vMaxBounds = ( 9.744934, 4.281438, 6.627213 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_ForeArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_ForeArm"
					float(3) m_vMinBounds = ( -31.456573, -11.697990, -10.121054 )
					float(3) m_vMaxBounds = ( 5.153976, 12.677704, 10.250994 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_thigh"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_thigh"
					float(3) m_vMinBounds = ( -27.989227, -20.416449, -15.483727 )
					float(3) m_vMaxBounds = ( 19.977066, 18.839296, 60.942444 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_thigh"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_thigh"
					float(3) m_vMinBounds = ( -16.123295, -19.770515, -55.302948 )
					float(3) m_vMaxBounds = ( 27.990013, 20.415543, 16.066607 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_cape_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_cape_b"
					float(3) m_vMinBounds = ( -70.584663, -21.856937, -9.348732 )
					float(3) m_vMaxBounds = ( 2.024162, 15.757587, 10.401428 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Cape_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Cape_b"
					float(3) m_vMinBounds = ( -70.582077, -15.779883, -9.348717 )
					float(3) m_vMaxBounds = ( 20.323273, 21.834587, 10.401440 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_hand"
					float(3) m_vMinBounds = ( 0.046333, -7.509293, -11.596098 )
					float(3) m_vMaxBounds = ( 22.282913, 4.756981, 6.665035 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand"
					float(3) m_vMinBounds = ( -2.669830, -7.478374, -10.223110 )
					float(3) m_vMaxBounds = ( 13.950653, 3.059127, 8.743736 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_hand"
					float(3) m_vMinBounds = ( -20.045578, -5.941788, -4.603296 )
					float(3) m_vMaxBounds = ( 10.038368, 7.910156, 9.985483 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Knee"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Knee"
					float(3) m_vMinBounds = ( -12.322036, -17.285812, -11.595036 )
					float(3) m_vMaxBounds = ( 21.389648, 13.021946, 58.456631 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Knee"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Knee"
					float(3) m_vMinBounds = ( -14.977509, -16.833935, -60.760674 )
					float(3) m_vMaxBounds = ( 12.775887, 17.280910, 20.460968 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_cape_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_cape_c"
					float(3) m_vMinBounds = ( -45.706688, -20.331673, -9.348732 )
					float(3) m_vMaxBounds = ( 24.519709, 20.580944, 15.950272 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "M_Cape"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "M_Cape"
					float(3) m_vMinBounds = ( -28.613113, -4.129360, -4.233433 )
					float(3) m_vMaxBounds = ( -5.464310, 10.528000, -0.333733 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Cape_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Cape_c"
					float(3) m_vMinBounds = ( -45.702423, -20.602949, -9.348721 )
					float(3) m_vMaxBounds = ( 24.523972, 20.309702, 15.950283 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Index"
					float(3) m_vMinBounds = ( -3.467812, -2.124420, -4.727179 )
					float(3) m_vMaxBounds = ( 9.263565, 3.454269, 1.233620 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Middle"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Middle"
					float(3) m_vMinBounds = ( -2.340279, -2.762146, -6.808154 )
					float(3) m_vMaxBounds = ( 7.498398, 2.810860, -0.322911 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Ring"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Ring"
					float(3) m_vMinBounds = ( -2.012047, -3.900169, -5.368495 )
					float(3) m_vMaxBounds = ( 5.585472, 1.592079, -0.484051 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Thumb"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Thumb"
					float(3) m_vMinBounds = ( -0.462738, -1.354599, -2.328831 )
					float(3) m_vMaxBounds = ( 10.809662, 4.341301, 6.059013 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Index"
					float(3) m_vMinBounds = ( -5.938538, -5.072850, -2.754074 )
					float(3) m_vMaxBounds = ( 11.748169, 0.311203, 4.016857 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Middle"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Middle"
					float(3) m_vMinBounds = ( -5.600220, -6.204433, -7.174141 )
					float(3) m_vMaxBounds = ( 11.400482, 0.221739, 6.054939 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Ring"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Ring"
					float(3) m_vMinBounds = ( -4.640625, -5.727898, -1.886612 )
					float(3) m_vMaxBounds = ( 8.247314, -0.079308, 3.096497 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Thumb"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Thumb"
					float(3) m_vMinBounds = ( -1.187866, -3.370667, -4.475960 )
					float(3) m_vMaxBounds = ( 9.933212, 1.463730, 1.237663 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Neck"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Neck"
					float(3) m_vMinBounds = ( -16.791401, -10.055817, -20.696270 )
					float(3) m_vMaxBounds = ( 19.934299, 18.899368, 22.485851 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Index"
					float(3) m_vMinBounds = ( -7.648033, -3.002239, 0.909721 )
					float(3) m_vMaxBounds = ( 1.116440, 0.820522, 4.154373 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Middle"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Middle"
					float(3) m_vMinBounds = ( -9.261932, -2.564671, 1.158115 )
					float(3) m_vMaxBounds = ( 1.065445, 1.868202, 4.427578 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Pinky"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Pinky"
					float(3) m_vMinBounds = ( -7.318878, -2.460663, 1.058570 )
					float(3) m_vMaxBounds = ( 1.261337, 2.318489, 4.225091 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Ring"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Ring"
					float(3) m_vMinBounds = ( -8.206726, -2.084946, 1.061792 )
					float(3) m_vMaxBounds = ( 1.598907, 2.820454, 4.322782 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Thumb"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Thumb"
					float(3) m_vMinBounds = ( -15.075806, -4.455524, -5.023811 )
					float(3) m_vMaxBounds = ( 1.935463, 0.171947, 3.014721 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_foot"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_foot"
					float(3) m_vMinBounds = ( -7.711304, -8.218819, -1.238258 )
					float(3) m_vMaxBounds = ( 8.794956, 14.293545, 35.683960 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_foot"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_foot"
					float(3) m_vMinBounds = ( -8.714291, -14.309717, -37.385674 )
					float(3) m_vMaxBounds = ( 7.637634, 8.172512, 15.006408 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Cape_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Cape_d"
					float(3) m_vMinBounds = ( -10.913677, -20.331682, -22.998123 )
					float(3) m_vMaxBounds = ( 134.476547, 20.580935, 15.950271 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "M_Cape_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "M_Cape_b"
					float(3) m_vMinBounds = ( -38.280205, -22.484600, -8.399513 )
					float(3) m_vMaxBounds = ( 20.019844, 22.914303, 6.686172 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Cape_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Cape_d"
					float(3) m_vMinBounds = ( -10.909427, -20.602955, -9.160381 )
					float(3) m_vMaxBounds = ( 28.008129, 20.309696, 15.950283 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Index_b"
					float(3) m_vMinBounds = ( -1.278786, -1.953407, -5.216984 )
					float(3) m_vMaxBounds = ( 10.692734, 3.068146, -1.096777 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Middle_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Middle_b"
					float(3) m_vMinBounds = ( -2.289398, -1.538315, -5.299774 )
					float(3) m_vMaxBounds = ( 9.463829, 2.576782, -1.159786 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Ring_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Ring_b"
					float(3) m_vMinBounds = ( -1.156937, -2.546501, -4.026740 )
					float(3) m_vMaxBounds = ( 8.762230, 1.539200, -1.096813 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand_Finger_Thumb_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand_Finger_Thumb_b"
					float(3) m_vMinBounds = ( -3.092377, -0.177320, -21.476416 )
					float(3) m_vMaxBounds = ( 33.123695, 10.372649, 3.472599 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Index_b"
					float(3) m_vMinBounds = ( -0.884277, -3.996479, -1.819874 )
					float(3) m_vMaxBounds = ( 9.771637, -0.120125, 1.521969 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Middle_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Middle_b"
					float(3) m_vMinBounds = ( -3.112610, -4.872692, -1.016541 )
					float(3) m_vMaxBounds = ( 9.162964, -0.164814, 2.163773 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Ring_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Ring_b"
					float(3) m_vMinBounds = ( -2.868439, -3.971048, -0.742916 )
					float(3) m_vMaxBounds = ( 7.958649, -0.885315, 2.248444 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Up_Hand_Finger_Thumb_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Up_Hand_Finger_Thumb_b"
					float(3) m_vMinBounds = ( -2.324585, -2.152538, -4.475960 )
					float(3) m_vMaxBounds = ( 8.427460, 1.375069, 0.257744 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "head"
					float(3) m_vMinBounds = ( -20.099400, -16.279869, -14.533653 )
					float(3) m_vMaxBounds = ( 19.690502, 24.874672, 28.729752 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Index_b"
					float(3) m_vMinBounds = ( -7.398651, -2.284515, 0.949415 )
					float(3) m_vMaxBounds = ( -0.264687, 0.377838, 3.558468 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Middle_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Middle_b"
					float(3) m_vMinBounds = ( -7.897346, -1.957291, 0.539896 )
					float(3) m_vMaxBounds = ( 2.448677, 0.718704, 3.926964 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Pinky_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Pinky_b"
					float(3) m_vMinBounds = ( -5.387642, -1.070316, 1.726129 )
					float(3) m_vMaxBounds = ( 0.497375, 1.196442, 3.685579 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Ring_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Ring_b"
					float(3) m_vMinBounds = ( -6.620239, -1.339638, 1.315649 )
					float(3) m_vMaxBounds = ( 0.329887, 1.333084, 3.992615 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand_Finger_Thumb_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand_Finger_Thumb_b"
					float(3) m_vMinBounds = ( -8.239212, -3.687519, -2.589474 )
					float(3) m_vMaxBounds = ( 1.741966, -0.664940, 1.562859 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_toe"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_toe"
					float(3) m_vMinBounds = ( -7.711298, -5.964099, -7.018709 )
					float(3) m_vMaxBounds = ( 7.443439, 4.879786, 19.716085 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_toe"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_toe"
					float(3) m_vMinBounds = ( -7.422428, -4.879080, -19.502600 )
					float(3) m_vMaxBounds = ( 7.732447, 5.964801, 7.030840 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Weapon"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Weapon"
					float(3) m_vMinBounds = ( -24.008499, -118.826706, -11.630760 )
					float(3) m_vMaxBounds = ( 8.377304, 58.112991, 6.042180 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVattachmentList CVattachmentList_0
{
	string m_name = ""
	CVattachment[] m_attachments = 
	[
		CVattachment
		{
			string m_name = "attach_root"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "root"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_hitloc"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "spine"
					float(3) m_vTranslationOffset = ( -0.000001, 10.266624, 0.000001 )
					float(3) m_vRotationOffset = ( 0.000007, 0.000009, -0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_attack1"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Weapon"
					float(3) m_vTranslationOffset = ( 0.000011, 51.165634, -3.661134 )
					float(3) m_vRotationOffset = ( 0.000001, 0.000003, -0.000005 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "viktor_attack1"
			string m_Filepath = "models/champions/viktor/viktor_attack1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_idle1"
			string m_Filepath = "models/champions/viktor/viktor_idle1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 119
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_idle2"
			string m_Filepath = "models/champions/viktor/viktor_idle2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 128
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_IMPATIENT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_idle3"
			string m_Filepath = "models/champions/viktor/viktor_idle3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 214
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_joke"
			string m_Filepath = "models/champions/viktor/viktor_joke.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 214
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_RARE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_laugh"
			string m_Filepath = "models/champions/viktor/viktor_laugh.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 139
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_run"
			string m_Filepath = "models/champions/viktor/viktor_run.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 59
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = false
					bool m_bExtractTY = false
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_spell1"
			string m_Filepath = "models/champions/viktor/viktor_spell1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_spell1b"
			string m_Filepath = "models/champions/viktor/viktor_spell1b.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_spell2"
			string m_Filepath = "models/champions/viktor/viktor_spell2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_spell3"
			string m_Filepath = "models/champions/viktor/viktor_spell3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_4"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_spell4"
			string m_Filepath = "models/champions/viktor/viktor_spell4.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 38
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_7"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "viktor_taunt"
			string m_Filepath = "models/champions/viktor/viktor_taunt.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 184
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "defaultmaterial.vmat"
			string m_sReplaceMaterial = "materials/champions/viktor.vmat"
		}
	]
}