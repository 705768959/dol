<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "lux_bindpose"
				string m_meshFile = "models/champions/fbx/lux/lux_bindpose.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bUseOnlyRealMeshBones = false
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_sMDLFilename = ""
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "root"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "root"
					float(3) m_vMinBounds = ( -12.328659, -13.368694, -9.698370 )
					float(3) m_vMaxBounds = ( 10.507454, 41.130730, 7.150887 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "spine"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "spine"
					float(3) m_vMinBounds = ( -10.673649, -7.713005, -7.678577 )
					float(3) m_vMaxBounds = ( 9.557182, 12.945450, 9.388821 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "chest"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "chest"
					float(3) m_vMinBounds = ( -11.177370, -7.984138, -11.125083 )
					float(3) m_vMaxBounds = ( 10.660767, 24.370270, 8.860496 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Shoulder"
					float(3) m_vMinBounds = ( 2.126725, -6.755501, -6.664650 )
					float(3) m_vMaxBounds = ( 15.354183, 7.309746, 7.556349 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Shoulder"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Shoulder"
					float(3) m_vMinBounds = ( -14.415451, -6.130707, -5.756741 )
					float(3) m_vMaxBounds = ( -4.607147, 4.656776, 5.271856 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_UpArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_UpArm"
					float(3) m_vMinBounds = ( -6.497360, -7.360233, -4.583662 )
					float(3) m_vMaxBounds = ( 18.535706, 6.124863, 7.040783 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_UpArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_UpArm"
					float(3) m_vMinBounds = ( -6.151733, -5.386921, -6.742043 )
					float(3) m_vMaxBounds = ( 4.086151, 5.878225, 19.722855 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hip"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hip"
					float(3) m_vMinBounds = ( -16.392803, -14.558205, -23.477608 )
					float(3) m_vMaxBounds = ( 13.605555, 26.464966, 7.610168 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_ForeArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_ForeArm"
					float(3) m_vMinBounds = ( -2.053364, -3.191135, -3.748238 )
					float(3) m_vMaxBounds = ( 18.309292, 4.721539, 13.885315 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_ForeArm"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_ForeArm"
					float(3) m_vMinBounds = ( -18.634449, -4.797165, -3.058250 )
					float(3) m_vMaxBounds = ( 2.083122, 3.148937, 3.754314 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "neck"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "neck"
					float(3) m_vMinBounds = ( -5.009981, -1.633629, -4.037029 )
					float(3) m_vMaxBounds = ( 5.105473, 7.232414, 3.413738 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Thigh"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Thigh"
					float(3) m_vMinBounds = ( -9.936981, -3.287292, -11.142460 )
					float(3) m_vMaxBounds = ( 14.025715, 31.527237, 16.607315 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Thigh"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Thigh"
					float(3) m_vMinBounds = ( -9.387350, -1.332245, -14.039827 )
					float(3) m_vMaxBounds = ( 16.898315, 31.747200, 8.470772 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Hand"
					float(3) m_vMinBounds = ( -1.958401, -4.171669, -4.801539 )
					float(3) m_vMaxBounds = ( 8.569368, 2.250412, 1.677047 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Hand"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Hand"
					float(3) m_vMinBounds = ( -10.604649, -2.065033, -3.511974 )
					float(3) m_vMaxBounds = ( 1.545582, 3.889549, 3.869541 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "head"
					float(3) m_vMinBounds = ( -11.226107, -5.788223, -3.158089 )
					float(3) m_vMaxBounds = ( 6.641737, 13.792793, 15.957199 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Knee"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Knee"
					float(3) m_vMinBounds = ( -9.132900, -10.182827, -9.649482 )
					float(3) m_vMaxBounds = ( 13.999954, 42.077869, 6.470492 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Knee"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Knee"
					float(3) m_vMinBounds = ( -10.400211, -10.887081, -5.552727 )
					float(3) m_vMaxBounds = ( 13.670879, 41.032494, 7.897770 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index"
					float(3) m_vMinBounds = ( -0.367802, -0.309189, -0.920994 )
					float(3) m_vMaxBounds = ( 4.286694, 0.931338, 0.727127 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_c"
					float(3) m_vMinBounds = ( -0.887882, -0.346109, -1.026550 )
					float(3) m_vMaxBounds = ( 4.274780, 1.077690, 0.679096 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_e"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_e"
					float(3) m_vMinBounds = ( -0.810425, -0.738359, -0.892265 )
					float(3) m_vMaxBounds = ( 3.893974, 0.896544, 0.661179 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_g"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_g"
					float(3) m_vMinBounds = ( -0.516071, -0.441525, -0.693466 )
					float(3) m_vMaxBounds = ( 2.989292, 0.697340, 0.394485 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Thumb_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Thumb_Index"
					float(3) m_vMinBounds = ( -4.104679, -1.967339, -2.341057 )
					float(3) m_vMaxBounds = ( 4.863998, 1.211239, 1.332127 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index"
					float(3) m_vMinBounds = ( -4.357723, -1.364187, -0.986668 )
					float(3) m_vMaxBounds = ( 0.766037, 3.411173, 1.050514 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_c"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_c"
					float(3) m_vMinBounds = ( -4.410908, -1.229313, -0.867916 )
					float(3) m_vMaxBounds = ( 0.238068, 3.826588, 0.715668 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_e"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_e"
					float(3) m_vMinBounds = ( -4.031055, -1.128136, -0.876656 )
					float(3) m_vMaxBounds = ( 0.380466, 3.490715, 0.768913 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_g"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_g"
					float(3) m_vMinBounds = ( -3.431740, -0.670685, -0.637154 )
					float(3) m_vMaxBounds = ( 0.676003, 2.628578, 0.681229 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Thumb_Index"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Thumb_Index"
					float(3) m_vMinBounds = ( -4.911774, -1.419899, -1.411807 )
					float(3) m_vMaxBounds = ( 2.121403, 4.038364, 3.658558 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hair"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hair"
					float(3) m_vMinBounds = ( -9.167913, -5.352489, -5.117973 )
					float(3) m_vMaxBounds = ( 10.583792, 8.645115, 7.092674 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_L_Cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_L_Cloth"
					float(3) m_vMinBounds = ( -15.569564, -12.658989, -15.362137 )
					float(3) m_vMaxBounds = ( 13.708404, 18.029507, 2.731647 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_R_Cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_R_Cloth"
					float(3) m_vMinBounds = ( -17.012232, -7.776749, -2.465603 )
					float(3) m_vMaxBounds = ( 15.447451, 19.446381, 12.297277 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Foot"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Foot"
					float(3) m_vMinBounds = ( -4.304543, -4.561737, -7.993231 )
					float(3) m_vMaxBounds = ( 4.608726, 15.088551, 5.977028 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Foot"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Foot"
					float(3) m_vMinBounds = ( -4.600660, -4.023374, -6.597970 )
					float(3) m_vMaxBounds = ( 4.344513, 13.482378, 7.855588 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_b"
					float(3) m_vMinBounds = ( -0.555904, -3.064217, -0.769539 )
					float(3) m_vMaxBounds = ( 3.464691, 0.438540, 1.224724 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_d"
					float(3) m_vMinBounds = ( -0.483789, -3.943380, -0.739182 )
					float(3) m_vMaxBounds = ( 3.020401, 0.489265, 1.447350 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_f"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_f"
					float(3) m_vMinBounds = ( -0.392944, -3.707234, -0.564339 )
					float(3) m_vMaxBounds = ( 2.464398, 0.491181, 1.349213 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Finger_Index_h"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Finger_Index_h"
					float(3) m_vMinBounds = ( -0.242121, -2.784187, -0.580856 )
					float(3) m_vMaxBounds = ( 2.031086, 0.456017, 0.710991 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Thumb_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Thumb_Index_b"
					float(3) m_vMinBounds = ( -1.215415, -2.073069, -1.853035 )
					float(3) m_vMaxBounds = ( 1.863104, 0.634604, 2.482155 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "WEAPON"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "WEAPON"
					float(3) m_vMinBounds = ( -7.183197, -73.531570, -4.967220 )
					float(3) m_vMaxBounds = ( 7.374763, 16.001236, 4.869587 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_b"
					float(3) m_vMinBounds = ( -4.489386, -1.389267, -0.677132 )
					float(3) m_vMaxBounds = ( 0.573759, 0.370018, 0.594250 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_d"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_d"
					float(3) m_vMinBounds = ( -4.929279, -1.031090, -0.651848 )
					float(3) m_vMaxBounds = ( 0.641464, 0.336113, 0.669651 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_f"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_f"
					float(3) m_vMinBounds = ( -4.364923, -0.843102, -0.697086 )
					float(3) m_vMaxBounds = ( 0.557198, 0.474258, 0.648884 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Finger_Index_h"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Finger_Index_h"
					float(3) m_vMinBounds = ( -3.440155, -0.731419, -0.474297 )
					float(3) m_vMaxBounds = ( 0.734398, 0.353394, 0.611660 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Thumb_Index_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Thumb_Index_b"
					float(3) m_vMinBounds = ( -2.480394, -1.366047, -2.902458 )
					float(3) m_vMaxBounds = ( 0.797030, 0.768230, 1.754688 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_hair"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_hair"
					float(3) m_vMinBounds = ( -4.814548, -5.201584, -1.850220 )
					float(3) m_vMaxBounds = ( 2.947754, 4.565582, 7.862881 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "hair_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "hair_b"
					float(3) m_vMinBounds = ( -9.167914, -6.311043, -2.728558 )
					float(3) m_vMaxBounds = ( 10.583793, 1.782074, 8.058699 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "jaw"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "jaw"
					float(3) m_vMinBounds = ( -11.459515, -12.851608, -8.555387 )
					float(3) m_vMaxBounds = ( 6.828810, 3.085625, 5.168528 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_L_Cloth_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_L_Cloth_b"
					float(3) m_vMinBounds = ( -20.857391, -11.464590, -4.928894 )
					float(3) m_vMaxBounds = ( 3.866032, 10.785915, 7.506008 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "B_R_Cloth_b"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "B_R_Cloth_b"
					float(3) m_vMinBounds = ( -14.903893, -1.632730, -2.014248 )
					float(3) m_vMaxBounds = ( 14.091675, 10.565613, 7.791595 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_L_Cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_L_Cloth"
					float(3) m_vMinBounds = ( -11.465359, -14.168476, -0.650515 )
					float(3) m_vMaxBounds = ( 4.645800, 2.984451, 4.197374 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "F_R_Cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "F_R_Cloth"
					float(3) m_vMinBounds = ( -2.128296, -3.584312, -0.678104 )
					float(3) m_vMaxBounds = ( 10.660391, 14.808468, 4.255056 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Toe"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Toe"
					float(3) m_vMinBounds = ( -4.254264, -0.798652, -2.783138 )
					float(3) m_vMaxBounds = ( 4.670744, 10.101196, 9.966159 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "L_Cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "L_Cloth"
					float(3) m_vMinBounds = ( -15.255402, -14.970810, -14.230301 )
					float(3) m_vMaxBounds = ( 8.006989, 2.220352, 8.244259 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Toe"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Toe"
					float(3) m_vMinBounds = ( -5.002872, -0.773753, -3.413910 )
					float(3) m_vMaxBounds = ( 3.954929, 10.092016, 10.045714 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "R_Cloth"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "R_Cloth"
					float(3) m_vMinBounds = ( -5.344065, -13.282880, -5.522758 )
					float(3) m_vMaxBounds = ( 12.688166, 13.423602, 13.704056 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "lux_attack1"
			string m_Filepath = "models/champions/fbx/lux/lux_attack1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_attack2"
			string m_Filepath = "models/champions/fbx/lux/lux_attack2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_bindpose"
			string m_Filepath = "models/champions/fbx/lux/lux_bindpose.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 59
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = ""
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_channel"
			string m_Filepath = "models/champions/fbx/lux/lux_channel.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CHANNEL_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_channel_windup"
			string m_Filepath = "models/champions/fbx/lux/lux_channel_windup.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CHANNEL_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_crit"
			string m_Filepath = "models/champions/fbx/lux/lux_crit.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = ""
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_death"
			string m_Filepath = "models/champions/fbx/lux/lux_death.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 59
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_idle1"
			string m_Filepath = "models/champions/fbx/lux/lux_idle1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 31
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_idle3"
			string m_Filepath = "models/champions/fbx/lux/lux_idle3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 169
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_IMPATIENT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_idle4"
			string m_Filepath = "models/champions/fbx/lux/lux_idle4.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 227
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE_RARE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_joke"
			string m_Filepath = "models/champions/fbx/lux/lux_joke.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 114
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_TAUNT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_run"
			string m_Filepath = "models/champions/fbx/lux/lux_run.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 143
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_spell1"
			string m_Filepath = "models/champions/fbx/lux/lux_spell1.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_spell2"
			string m_Filepath = "models/champions/fbx/lux/lux_spell2.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_spell3"
			string m_Filepath = "models/champions/fbx/lux/lux_spell3.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 29
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_3"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "lux_spell4"
			string m_Filepath = "models/champions/fbx/lux/lux_spell4.fbx"
			int m_nStartframe = 0
			int m_nEndframe = 59
			float m_flFps = 24.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_4"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "lux_base_md_v10_mat_lux5.vmat"
			string m_sReplaceMaterial = "materials/imported/champions/lux/lux_base_cm_tx.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "pasted__lambert8.vmat"
			string m_sReplaceMaterial = "materials/imported/champions/lux/lux_base_cm_tx.vmat"
		}
	]
}